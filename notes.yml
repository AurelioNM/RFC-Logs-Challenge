pensa num foeach q percorre esse array, monta uma str comas chaves e depois aplica a função e valida se o resultado é igual aos valores, e monta isso dinamicamente.... para isso, esse array aí PRECISA ser um dict externo e acessível pelo teste... dá pra fazer uma parada bonita....

FINO:
  -K8s, PRECISA ser em console.log. O log fica no K8 Manager (kubectl, por exemplo), no K8s vc não deveria gerar nenhum arquivo dentro da imagem, geralmente inclusive é readonly.... as imagens não deveriam ter estado, como log, dentro delas...
  -E se a aplicação quebrar? Vc loga tudo para console.log e o controle e registro disso ficam FORA da imagem... normalmente o gestor de containers captura o STDOUT e joga para um gestor de log (syslog, por exemplo) e de lá vc captura isso, transporta e indexa/armazena no seu gestor de logs (ELK, Graylog, Splunk, etc)
  -É para entender esse rolê todo, erros comuns, cagadas, problemas, boas práticas, oq fazer e como fazer q vamos falar dessa RFC aí.... tem muitas formas super diferentes de lidar com isso
  -Sim, pensa q se vc tem uma imagem/container rodando, é um recurso q PRECISA ser totalmente imutavel (stateless, descartável, sem armazenar NADA dentro dele), normalmente a imagem/container q roda inclusive é readonly, ou seja, vc não deve/pode escrever NADA dentro dele. caso contrário, como um gestor de container iria gerenciar auto-scaling? (q não se trata só de crescer, mas tbm de diminuir o tamanho da infra)
  -a imagem PRECISA saber/poder morrer a qlqr momento sem perder dados
  -vc loga dentro da imagem para STDOUT e no host do container isso vai para um syslog
  .vo tentar aplicar no produtor de log. logar no stdout e coletar com outro cara 
    -o caminho "estado da arte" é vc ter isso configurável, como fizemos naquela lib, lembra? onde vc escolhe qual o seu "writer/publisher/store" de log. eu usei nomes diferentes, q nesse caso, fazem a mesma coisa
    -q é pegar o log e enviar para algum canto
    -no meio do caminho vc tem um "processos/formatter/converter" q transforma seu log, seguindo uma RFC (q vc fez ou não) em algo.... JSON, TEXT, XML, CSV, TSV, bla bla bla....
    -pensa q o stdout do container é lido pelo host.... e o host pode jogar esse stdout para qlqr lugar e de lá vc pode tratar
    -Ou vc tbm pode, num modelo mais bonito, apontar o log do container para o syslog do host direto. Via udp

Facility:
  -Níveis de segurança bem definidos, com exatamente o que deve ser logado com eles
  -Tamanho das mensagens
  -Definir códigos, para os logs estarem mais sucintos

O que deve ser logado:
  -Oq é considerado importante para ser logado

